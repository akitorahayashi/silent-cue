name: Build Unsigned Archive

on:
  workflow_call:

jobs:
  archive:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'
          
      - name: Cache SPM dependencies
        uses: actions/cache@v4
        with:
          path: |
            DerivedData/Build/SourcePackages/checkouts
            ~/.swiftpm/xcode-package-cache
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Cache Mint packages
        uses: actions/cache@v4
        id: cache-mint-packages
        with:
          path: ${{ github.workspace }}/.mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      - name: Install Mint
        run: brew install mint

      - name: Generate Xcode Project
        run: mint run xcodegen generate

      - name: Build Release Version (Unsigned)
        run: |
          set -euo pipefail

          # バージョン情報の取得
          VERSION=$(grep -A 1 'MARKETING_VERSION' SilentCue.xcodeproj/project.pbxproj | tail -1 | sed 's/[^0-9.]//g')
          BUILD_NUMBER=$(grep -A 1 'CURRENT_PROJECT_VERSION' SilentCue.xcodeproj/project.pbxproj | tail -1 | sed 's/[^0-9]//g')
          echo "Building version $VERSION ($BUILD_NUMBER)"
          
          # ビルドディレクトリ作成 (アーカイブ用サブディレクトリも含む)
          # DerivedDataもここに含める
          mkdir -p ./ci-outputs/production/archives/DerivedData
          
          # 署名なしでビルド
          set -o pipefail && xcodebuild \
            -project "SilentCue.xcodeproj" \
            -scheme "SilentCue Watch App" \
            -configuration Release \
            -destination "generic/platform=watchOS" \
            -archivePath "./ci-outputs/production/archives/SilentCue.xcarchive" \
            -derivedDataPath "./ci-outputs/production/archives/DerivedData" \
            -skipMacroValidation \
            CODE_SIGNING_ALLOWED=NO \
            archive \
          | xcbeautify
          
      - name: Verify Archive Contents
        run: |
          set -euo pipefail
          echo "Checking archive contents..."
          # Check if the specific .app directory exists within the archive's Products/Applications path
          ARCHIVE_APP_PATH="./ci-outputs/production/archives/SilentCue.xcarchive/Products/Applications/SilentCue Watch App.app"
          if [ ! -d "$ARCHIVE_APP_PATH" ]; then
            echo "Error: 'SilentCue Watch App.app' not found in expected archive location ($ARCHIVE_APP_PATH)."
            # Optionally list contents again on error
            echo "--- Archive Contents (on error) ---"
            ls -lR ./ci-outputs/production/archives/SilentCue.xcarchive || echo "Archive directory not found or empty."
            exit 1
          fi
          echo "✅ Archive content verified."
            
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-archive
          path: |-
            ./ci-outputs/production/archives/SilentCue.xcarchive
          retention-days: 7