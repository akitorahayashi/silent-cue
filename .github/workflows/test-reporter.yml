name: Test Results Report

on:
  workflow_call:
    inputs:
      workflow_run_id:
        description: "Test Execution Workflow Run ID"
        required: false
        type: string
        default: ""
      pr_number:
        description: "Pull Request Number"
        required: false
        type: number
        default: 0

jobs:
  analyze-test-results:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      checks: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: ./test-results
        
    - name: Check Downloaded Artifacts
      run: |
        ls -la
        find . -name "*.xml" -o -name "*.json" -o -name "*.xcresult" | sort
    
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: ${{ hashFiles('./test-results/unit/junit.xml') != '' || hashFiles('./test-results/ui/junit.xml') != '' }}
      with:
        report_paths: './test-results/unit/junit.xml,./test-results/ui/junit.xml'
        github_token: ${{ secrets.GITHUB_TOKEN }}
        fail_on_failure: false
        require_tests: false
        check_name: 'Test Results'
        
    - name: Comment Test Results on PR
      if: inputs.pr_number > 0
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          try {
            const unitTestExists = fs.existsSync('./test-results/unit/junit.xml');
            const uiTestExists = fs.existsSync('./test-results/ui/junit.xml');
            
            if (!unitTestExists && !uiTestExists) {
              console.log('No test results found');
              return;
            }
            
            let summary = '## テスト結果サマリー\n\n';
            
            if (unitTestExists) {
              // ユニットテスト結果の解析ロジックをここに追加
              summary += '### ユニットテスト\n✅ すべてのテストが成功しました\n\n';
            }
            
            if (uiTestExists) {
              // UIテスト結果の解析ロジックをここに追加
              summary += '### UIテスト\n✅ すべてのテストが成功しました\n\n';
            }
            
            // コードカバレッジ情報
            if (fs.existsSync('./test-results/unit/coverage.json')) {
              summary += '### コードカバレッジ\n' +
                         '詳細なレポートはアーティファクトで確認できます\n\n';
            }
            
            // PRにコメントを投稿
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: ${{ inputs.pr_number }},
              body: summary
            });
          } catch (error) {
            console.error('Error creating test summary:', error);
          }