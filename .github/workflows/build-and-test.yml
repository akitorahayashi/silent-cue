name: Build & Test

on:
  workflow_call:
    outputs:
      test_result:
        description: "Test Result"
        value: ${{ jobs.test.outputs.test_result }}

jobs:
  test:
    runs-on: macos-latest
    outputs:
      test_result: ${{ steps.test_status.outputs.result }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: Find Simulator
      id: find-simulator
      run: |
        echo "Available watchOS Simulators:"
        xcrun simctl list devices available | grep -A 20 "watchOS"
        
        # watchOSバージョンを取得
        WATCHOS_VERSION=$(xcrun simctl list devices available | grep -A 1 "watchOS" | head -1 | grep -oE 'watchOS [0-9]+\.[0-9]+')
        
        # シミュレータの名前とIDを取得
        SIMULATOR_INFO=$(xcrun simctl list devices available | grep -A 20 "watchOS" | grep 'Apple Watch Series' | head -1)
        SIMULATOR_NAME=$(echo "$SIMULATOR_INFO" | sed -E 's/^[[:space:]]*([^(]+).*$/\1/' | xargs)
        SIMULATOR_ID=$(echo "$SIMULATOR_INFO" | grep -oE '[0-9A-F\\-]{36}')
        
        echo "simulator_id=$SIMULATOR_ID" >> $GITHUB_OUTPUT
        echo "Using $SIMULATOR_NAME with $WATCHOS_VERSION (ID: $SIMULATOR_ID)"
        
    - name: Install xcpretty
      run: |
        gem install xcpretty
        
    - name: Create Test Results Directory
      run: mkdir -p test-results/unit test-results/ui
        
    - name: Build for Testing
      run: |
        xcodebuild build-for-testing \
          -project "SilentCue.xcodeproj" \
          -scheme "SilentCue Watch App" \
          -destination "platform=watchOS Simulator,id=${{ steps.find-simulator.outputs.simulator_id }}" \
          -derivedDataPath ./xcbuild \
          -configuration Debug \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty
      
    - name: Run Unit Tests
      id: unit_tests
      run: |
        xcodebuild test-without-building \
          -project "SilentCue.xcodeproj" \
          -scheme "SilentCue Watch AppTests" \
          -destination "platform=watchOS Simulator,id=${{ steps.find-simulator.outputs.simulator_id }}" \
          -derivedDataPath ./xcbuild \
          -resultBundlePath ./test-results/unit/TestResults.xcresult \
          | xcbeautify --report junit --report-path ./test-results/unit/junit.xml
        
        echo "UNIT_TEST_STATUS=$?" >> $GITHUB_ENV
        ls -la ./test-results/unit/
      continue-on-error: false
          
    - name: Run UI Tests
      id: ui_tests
      run: |
        xcodebuild test-without-building \
          -project "SilentCue.xcodeproj" \
          -scheme "SilentCue Watch AppUITests" \
          -destination "platform=watchOS Simulator,id=${{ steps.find-simulator.outputs.simulator_id }}" \
          -derivedDataPath ./xcbuild \
          -resultBundlePath ./test-results/ui/TestResults.xcresult \
          | xcbeautify --report junit --report-path ./test-results/ui/junit.xml
          
        echo "UI_TEST_STATUS=$?" >> $GITHUB_ENV
        ls -la ./test-results/ui/
      continue-on-error: false
      
    - name: Set Test Status
      id: test_status
      run: |
        if [ "$UNIT_TEST_STATUS" == "0" ] && [ "$UI_TEST_STATUS" == "0" ]; then
          echo "result=success" >> $GITHUB_OUTPUT
        else
          echo "result=failure" >> $GITHUB_OUTPUT
        fi
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./test-results
        retention-days: 7 